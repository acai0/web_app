{"remainingRequest":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\src\\views\\Member.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\src\\views\\Member.vue","mtime":1645695165000},{"path":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648803903617},{"path":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1648803908579},{"path":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648803903617},{"path":"C:\\Users\\chris\\Downloads\\Coop-test\\Coop-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1648803909434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZXNzYWdlIGZyb20gIi4uL2NvbXBvbmVudHMvTWVzc2FnZS52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTWVzc2FnZSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZW1iZXI6IGZhbHNlLAogICAgICBhbGxNZXNzYWdlczogW10sCiAgICAgIGNvbnZlcnNhdGlvbjogIiIsCiAgICAgIGRlbGV0ZU1lbWJlck1lc3NhZ2U6ICIiLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLm1lbWJlciA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TWVtYmVyKHRoaXMuJHJvdXRlLnBhcmFtcy5pZE1lbWJlcik7CgogICAgLy9PbiByw6ljdXDDqHJlIHRvdXRlcyBsZXMgY29udmVyc2F0aW9uLCBldCBwb3VyIGNoYXF1ZSBjb252ZXJzYXRpb24gdG91cyBzZXMgbWVzc2FnZXMsIG9uIHB1c2ggZW5zdWl0ZSBsZXMgbWVzc2FnZXMgZHUgdXNlciBhY3V0ZWxsZSBkYW5zIGFsbE1lc3NhZ2VzCiAgICB0aGlzLiRhcGkuZ2V0KCJjaGFubmVscyIpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaCgoY29udmVyc2F0aW9uKSA9PiB7CiAgICAgICAgdGhpcy5jb252ZXJzYXRpb24gPSBjb252ZXJzYXRpb247CiAgICAgICAgdGhpcy4kYXBpLmdldChgY2hhbm5lbHMvJHtjb252ZXJzYXRpb24uaWR9L3Bvc3RzYCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaCgobWVzc2FnZSkgPT4gewogICAgICAgICAgICBpZiAobWVzc2FnZS5tZW1iZXJfaWQgPT0gdGhpcy5tZW1iZXIuaWQpIHsKICAgICAgICAgICAgICB0aGlzLmFsbE1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1lc3NhZ2VzKCkgewogICAgICAvL3RyaWVyIGxlcyBtZXNzYWdlcyBzZWxvbiBsZXVycyBkYXRlIGRlIGNyw6lhdGlvbiBldCBwcmVuZHJlIGxlcyAxMCBtZXNzYWdlcyBsZXMgcGx1cyByw6ljZW50CiAgICAgIHJldHVybiB0aGlzLmFsbE1lc3NhZ2VzCiAgICAgICAgLnNvcnQoKG1hLCBtYikgPT4gbmV3IERhdGUobWEuY3JlYXRlZF9hdCkgPCBuZXcgRGF0ZShtYi5jcmVhdGVkX2F0KSkKICAgICAgICAuc2xpY2UoMCwgMTApOwogICAgfSwKICAgIGNyZWF0ZWRfYXQoKSB7CiAgICAgIGlmICh0aGlzLm1lbWJlcikgewogICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUodGhpcy5tZW1iZXIuY3JlYXRlZF9hdCk7CiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCJmci1GUiIpICsKICAgICAgICAgICIgw6AgIiArCiAgICAgICAgICBkYXRlLnRvTG9jYWxlVGltZVN0cmluZygiZnItRlIiKQogICAgICAgICk7CiAgICAgIH0KICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBkZWxldGVNZW1iZXIoKSB7CiAgICAgIGlmIChjb25maXJtKCLDqnRlcy12b3VzIHPDu3JlIGRlIHZvdWxvaXIgc3VwcHJpbWVyIGxlIG1lbWJyZSA/IikpIHsKICAgICAgICB0aGlzLiRhcGkuZGVsZXRlKGBtZW1iZXJzLyR7dGhpcy5tZW1iZXIuaWR9YCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvTWVtYmVycyIpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Member.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Member.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <Header />\n    <section class=\"section\">\n      <div v-if=\"member\">\n        <div class=\"card\">\n          <div class=\"card-content\">\n            <div class=\"media\">\n              <div class=\"media-left\">\n                <figure class=\"image is-48x48\">\n                  <img :src=\"avatar(member)\" />\n                </figure>\n              </div>\n              <div class=\"media-content\">\n                <p class=\"title is-4\">{{ member.fullname }}</p>\n                <p class=\"subtitle is-6\">{{ member.email }}</p>\n              </div>\n              <div class=\"media-right\">\n                <button @click=\"deleteMember\" class=\"button is-danger is-small\">\n                  Supprimer le membre\n                </button>\n              </div>\n            </div>\n            <div class=\"content\">Membre depuis le {{ created_at }}</div>\n          </div>\n        </div>\n        <div class=\"box mt-5\">\n          {{ messages.length }} dernier(s) messages postés\n        </div>\n        <template v-for=\"message in messages\">\n          <message\n            :message=\"message\"\n            :key=\"message.id\"\n            :conversation=\"conversation\"\n          />\n        </template>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport Message from \"../components/Message.vue\";\nexport default {\n  components: {\n    Message,\n  },\n  data() {\n    return {\n      member: false,\n      allMessages: [],\n      conversation: \"\",\n      deleteMemberMessage: \"\",\n    };\n  },\n  mounted() {\n    this.member = this.$store.getters.getMember(this.$route.params.idMember);\n\n    //On récupère toutes les conversation, et pour chaque conversation tous ses messages, on push ensuite les messages du user acutelle dans allMessages\n    this.$api.get(\"channels\").then((response) => {\n      response.data.forEach((conversation) => {\n        this.conversation = conversation;\n        this.$api.get(`channels/${conversation.id}/posts`).then((response) => {\n          response.data.forEach((message) => {\n            if (message.member_id == this.member.id) {\n              this.allMessages.push(message);\n            }\n          });\n        });\n      });\n    });\n  },\n  computed: {\n    messages() {\n      //trier les messages selon leurs date de création et prendre les 10 messages les plus récent\n      return this.allMessages\n        .sort((ma, mb) => new Date(ma.created_at) < new Date(mb.created_at))\n        .slice(0, 10);\n    },\n    created_at() {\n      if (this.member) {\n        let date = new Date(this.member.created_at);\n        return (\n          date.toLocaleDateString(\"fr-FR\") +\n          \" à \" +\n          date.toLocaleTimeString(\"fr-FR\")\n        );\n      }\n    },\n  },\n  methods: {\n    deleteMember() {\n      if (confirm(\"êtes-vous sûre de vouloir supprimer le membre ?\")) {\n        this.$api.delete(`members/${this.member.id}`).then((response) => {\n          this.$router.push(\"/Members\");\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}